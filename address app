import React, { useState, useEffect } from 'react';
import { StyleSheet, Text, View, Button } from 'react-native';
import MapView, { Marker } from 'react-native-maps';
import * as Location from 'expo-location';
export default function App() {
  const [location, setLocation] = useState(null);
  const [address, setAddress] = useState(null);
  const [errorMsg, setErrorMsg] = useState(null);
  const [currentMarker, setCurrentMarker] = useState(null);
  useEffect(() => {
    (async () => {
      let { status } = await Location.requestForegroundPermissionsAsync();
      if (status !== 'granted') {
        setErrorMsg('Permission to access location was denied');
        return;
      }
      let location = await Location.getCurrentPositionAsync({});
      setLocation(location.coords);
      getAddressFromLocation(location.coords.latitude, location.coords.longitude);
    })();
  }, []);
  const getAddressFromLocation = async (latitude, longitude) => {
    try {
      let location = await Location.reverseGeocodeAsync({ latitude, longitude });
      setAddress(location[0]);
    } catch (error) {
      console.error("Error fetching address:", error);
    }};
  const getLocationFromAddress = async (address) => {
    try {
      let location = await Location.geocodeAsync(address);
      console.log("Geocoded Location:", location);
      if (location && location.length > 0) {
        let coords = { latitude: location[0].latitude, longitude: location[0].longitude };
        setCurrentMarker(coords);
      }
    } catch (error) {
      console.error("Error geocoding address:", error);
    }
  };
  return (
    <View style={styles.container}>
      <MapView style={styles.map} initialRegion={{
        latitude: location ? location.latitude : 37.78825,
        longitude: location ? location.longitude : -122.4324,
        latitudeDelta: 0.0922,
        longitudeDelta: 0.0421,
      }}>
        {currentMarker && (
          <Marker coordinate={currentMarker} title="Your Location" description="You are here">
            <View style={styles.marker}>
              <Text style={styles.markerText}>Pragathy</Text>
            </View>
          </Marker>
        )}
      </MapView>
      {address && (
        <View style={styles.addressContainer}>
          <Text style={styles.addressText}>{`Current Address: ${address.street}, ${address.city}, ${address.region}, ${address.postalCode}, ${address.country}`}</Text>
        </View>
      )}
      <Button title="Mark My Location" onPress={() => getLocationFromAddress("Nehru Nagar, Coimbatore")} />
    </View>
  );
}
const styles = StyleSheet.create({
  container: {
    ...StyleSheet.absoluteFillObject,
    justifyContent: 'flex-end',
    alignItems: 'center',
  },
  map: {
    ...StyleSheet.absoluteFillObject,
  },
  addressContainer: {
    position: 'absolute',
    top: 20,
    left: 10,
    right: 10,
    backgroundColor: 'rgba(255, 255, 255, 0.7)',
    borderRadius: 5,
    padding: 10,
  },
  addressText: {
    fontSize: 14,
  },
  marker: {
    backgroundColor: 'rgba(255, 0, 0, 0.8)',
    padding: 5,
    borderRadius: 5,
  },
  markerText: {
    color: 'white',
    fontWeight: 'bold',
  },
});
